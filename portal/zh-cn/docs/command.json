{
  "filename": "command.md",
  "__html": "<h1 id=\"%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8\">命令行使用 <a class=\"header-anchor\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8\">#</a></h1>\n<p>当使用者使用命令行工具时，可以通过<code>s</code>指令，查看整体帮助信息:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s</span>\nUsage: s [options] [command]\n\n  _________                               .__\n /   _____/ ______________  __ ___________|  |   ____   ______ ______\n \\_____  \\_/ __ \\_  __ \\  \\/ // __ \\_  __ \\  | _/ __ \\ /  ___//  ___/\n /        \\  ___/|  | \\/\\   /\\  ___/|  | \\/  |_\\  ___/ \\___ \\ \\___ \\\n/_________/\\_____&gt;__|    \\_/  \\_____&gt;__|  |____/\\_____&gt;______&gt;______&gt;\n\nWelcome to the Serverless Devs.\nYou can use the corresponding function through the following instructions.\n\nMore: \n📘 Documents: https://www.github.com/serverless-devs/docs\n🙌 Discussions: https://github.com/Serverless-Devs/Serverless-Devs/discussions\n⁉️  Issues: https://github.com/Serverless-Devs/Serverless-Devs/issues\n👀 Current Registry: http://registry.devsapp.cn/simple\n\nQuick start: \n🍻 Can perform 's init' fast experience\n\nOptions:\n  -v, --version   Output the version number\n  --skip-actions  Skip the extends section\n  --debug         Debug model\n  -h, --help      Display help for command\n\nCommands:\n  config          👤 Configure cloud service account.\n  init            💞 Initializing a project.\n  cli             🐚 Command line operation through yaml free mode.\n  set             🔧 Settings for the tool.\n  exec            🚀 Subcommand execution analysis.\n\n</code></pre>\n<h2 id=\"config%E6%8C%87%E4%BB%A4\">config指令 <a class=\"header-anchor\" href=\"#config%E6%8C%87%E4%BB%A4\">#</a></h2>\n<p><code>config</code>指令是密钥信息相关的指令，包括密钥的配置、密钥的查看以及密钥的修改、删除等。</p>\n<p>当我们执行<code>s config</code>之后，可以进行相关帮助信息的查看：</p>\n<pre><code class=\"language-shell\">Usage: s config [commands] [options]\n\nYou can configure provider accounts, including Alibaba Cloud, Baidu Cloud, Huawei Cloud, Tencent Cloud, etc.\n\nOptions:\n  -h, --help  Display help for command\n\nCommands:\n  add         ➕ Add an account\n  get         ✔️  Get accounts\n  delete      ✖️  Delete an account\n</code></pre>\n<h3 id=\"config-add-%E5%91%BD%E4%BB%A4\">config add 命令 <a class=\"header-anchor\" href=\"#config-add-%E5%91%BD%E4%BB%A4\">#</a></h3>\n<p>通过<code>config add</code>命令，可以进行密钥的配置，系统会默认为使用者提供部分云厂商的密钥模板，如果无法满足用户使用，可以通过<code>Custom</code>选项进行自定义密钥的<code>Key-Value</code>设定</p>\n<p>通过<code>-h/--help</code>可以查看到配置帮助：</p>\n<pre><code class=\"language-shell\">Usage: s config add [commands] [name]\n\nYou can add an account\n\n    Example:\n<span class=\"hljs-meta\">\t$</span><span class=\"bash\"> s config add</span>\n<span class=\"hljs-meta\">\t$</span><span class=\"bash\"> s config add --AccessKeyID ****** --AccessKeySecret ****** --AccountID ******</span>\n<span class=\"hljs-meta\">\t$</span><span class=\"bash\"> s config add --AccessKey ****** --SecretKey ******</span>\n\n    Configuration parameters for cloud vendors:\n\talibaba: AccountID, AccessKeyID, AccessKeySecret\n\taws: AccessKeyID, SecretAccessKey\n\tbaidu: AccessKeyID, SecretAccessKey\n\thuawei: AccessKey, SecretKey\n\tgoogle: PrivateKeyData\n\ttencent: AccountID, SecretID, SecretKey\n\n📘 How to get the key: https://github.com/Serverless-Devs/docs/tree/master/zh/others/provider-config\n\n\nOptions:\n  --AccountID [AccountID]              AccountID of key information\n  --AccessKeyID [AccessKeyID]          AccessKeyID of key information\n  --AccessKeySecret [AccessKeySecret]  AccessKeySecret of key information\n  --SecretAccessKey [SecretAccessKey]  SecretAccessKey of key information\n  --AccessKey [AccessKey]              AccessKey of key information\n  --SecretKey [SecretKey]              SecretKey of key information\n  --SecretID [SecretID]                SecretID of key information\n  --PrivateKeyData [PrivateKeyData]    PrivateKeyData of key information\n  -kl , --keyList [keyList]            Keys of key information, like: -kl key1,key2,key3\n  -il , --infoList [infoList]          Values of key information, like: -kl info1,info2,info3\n  -a , --aliasName [name]              Key pair alias, if the alias is not set, use default instead\n  -h, --help                           Display help for command\n</code></pre>\n<p>可以通过<code>config add</code>直接进行密钥的添加：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s config add </span>\n\n? Please select a provider: (Use arrow keys)\n❯ Alibaba Cloud (alibaba) \n  AWS (aws) \n  Azure (azure) \n  Baidu Cloud (baidu) \n  Google Cloud (google) \n  Huawei Cloud (huawei) \n  Tencent Cloud (tencent) \n  Custom (others) \n</code></pre>\n<p>当使用者选择某个选项之后，系统会进行交互式引导：</p>\n<pre><code class=\"language-shell\">s config add \n\n? Please select a provider: Alibaba Cloud (alibaba)\n? AccountID **********\n? AccessKeyID **********\n? AccessKeySecret **********\n? Please create alias for key pair. If not, please enter to skip default\n</code></pre>\n<p>也可以通过命令式直接进行密钥的添加：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s config add --AccessKeyID ****** --AccessKeySecret ****** --AccountID ******</span>\n</code></pre>\n<p>或者添加自定义内容：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s config add --AccessKeyID ****** -kl key1,key2,key3 -il info1,info2,info3</span>\n</code></pre>\n<ul>\n<li>常见云厂商密钥配置内容</li>\n</ul>\n<pre><code>alibaba:    AccountID, AccessKeyID, AccessKeySecret,\naws:        AccessKeyID, SecretAccessKey,\nbaidu:      AccessKeyID, SecretAccessKey,\nhuawei:     AccessKeyID, SecretAccessKey,\nazure:      KeyVaultName, TenantID, ClientID, ClientSecret,\ntencent:    AccountID, SecretID, SecretKey,\ngoogle:     PrivateKeyData\n</code></pre>\n<ul>\n<li>\n<p>通过环境变量获取密钥方法： 这一部分可能会根据不同的文档有不同的可能性，所以需要参考对应的文档进行环境变量对应的<code>Key-Value</code>确定。</p>\n</li>\n<li>\n<p>常见云厂商密钥获取地址：</p>\n<ul>\n<li><a href=\"./provider-config/alibabacloud.md\">阿里云</a></li>\n<li><a href=\"./provider-config/baiducloud.md\">百度云</a></li>\n<li><a href=\"./provider-config/aws.md\">AWS</a></li>\n<li><a href=\"./provider-config/azure.md\">Azure</a></li>\n<li><a href=\"./provider-config/gcp.md\">Google Cloud</a></li>\n<li><a href=\"./provider-config/huaweicloud.md\">华为云</a></li>\n<li><a href=\"./provider-config/tencentcloud.md\">腾讯云</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"config-get-%E5%91%BD%E4%BB%A4\">config get 命令 <a class=\"header-anchor\" href=\"#config-get-%E5%91%BD%E4%BB%A4\">#</a></h3>\n<p>通过<code>config get</code>指令，您可以获得配置过的账号信息。</p>\n<p>通过<code>-h/--help</code>可以查看到配置帮助：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s config get -h</span>\n\nUsage: s config get [options] [name]\n\nYou can get accounts.\n \n     Example:\n        $ s config get -l\n        $ s config get -a demo\n \n\nOptions:\n  -a, --alias-name [name]  Key pair alia, if the alias is not set, use default instead\n  -l, --list               Show user configuration list\n  -h, --help               Display help for command\n</code></pre>\n<h3 id=\"config-delete-%E5%91%BD%E4%BB%A4\">config delete 命令 <a class=\"header-anchor\" href=\"#config-delete-%E5%91%BD%E4%BB%A4\">#</a></h3>\n<p>通过<code>config delete</code>指令，您可以删除配置过的账号信息。</p>\n<p>通过<code>-h/--help</code>可以查看到配置帮助：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s config delete -h</span>\n\nUsage: s config delete [options] [name]\n\nYou can delete an account.\n\n     Example:\n        $ s config delete -a demo\n\n\nOptions:\n  -a , --alias-name [name]  Key pair alia, if the alias is not set, use default instead\n  -h,--help                 Display help for command\n</code></pre>\n<h2 id=\"init%E6%8C%87%E4%BB%A4\">init指令 <a class=\"header-anchor\" href=\"#init%E6%8C%87%E4%BB%A4\">#</a></h2>\n<p><code>init</code>指令是初始化Serverless项目的脚手架。</p>\n<p>当我们执行<code>s init -h</code>之后，可以进行相关帮助信息的查看：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s init -h</span>\n\nUsage: s init [options] [name | url]\n\nInitialize a new project based on a template. You can initialize the application that conforms to the serverless devs project specification through GitHub, or you can initialize the application provided by the source by configuring the source.\n\n    Example:\n        $ s init\n        $ s init project\n        $ s init git@github.com:foo/bar.git\n        $ s init https://github.com/foo/bar.git    \n\nOptions:\n  -d, --dir [dir]            Where to output the initialized app into (default: ./&lt;ProjectName&gt; )\n  -r, --registry [url]       Use specify registry  \n  -h, --help                 Display help for command\n</code></pre>\n<p>当我们直接执行<code>s init</code>，可以进入初始化引导功能：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s init</span>\n? Hello, serverlessor. Which template do you like? (Use arrow keys or type to search)\n  \n👋 Hello World Example\n❯ Aliyun FC node.js12-http \n  AWS Lambda nodejs12.x-http \n  Tencent SCF nodejs12.x-http \n  \n🚢 Web Framework Example\n  Express \n  Flask \n  Zblog \n  Midway \n  Malagu \n  \n🖥️  Static Website\n  Vue \n  React \n  Docusaurus \n  Hexo \n  Vuepress \n  \n🍼 Serverless Dev template\n  Application \n  Component \n</code></pre>\n<h2 id=\"cli%E6%8C%87%E4%BB%A4\">cli指令 <a class=\"header-anchor\" href=\"#cli%E6%8C%87%E4%BB%A4\">#</a></h2>\n<p><code>cli</code>指令是去Yaml化的命令行模式，即可以通过命令行直接使用Serverless Devs的组件，而不需要依赖Yaml文件。</p>\n<p>当我们执行<code>s cli -h</code>之后，可以进行相关帮助信息的查看：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s cli -h</span>\n\nUsage: s cli [component] [command] [options]\n\nDirectly use serverless devs to use components, develop and manage applications without yaml configuration\n\n    Example:\n        $ s cli fc list-service\n        $ s cli fc list-function --service-name my-service\n        $ s cli fc deploy -p \"{/\"function/\": /\"function-name/\"}\" --service-name my-service\n\nOptions:\n  -p, --param [component-config]     Component props which in Yaml file\n  -h, --help                         Display help for command\n</code></pre>\n<h2 id=\"exec%E6%8C%87%E4%BB%A4\">exec指令 <a class=\"header-anchor\" href=\"#exec%E6%8C%87%E4%BB%A4\">#</a></h2>\n<p><code>exec</code>是执行组件的子命令的指令。</p>\n<p>当我们执行<code>s exec -h</code>之后，可以进行相关帮助信息的查看：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s <span class=\"hljs-built_in\">exec</span> -h</span>\n\nUsage: s exec [service-name] [options] -- [component-sub-command] [options]\n\nRun a component sub command on an app\n\n    Example:\n        $ s exec fc -t test.yaml -- log --tail\n        $ s exec fc -- deploy\n\nOptions:\n  -h, --help                         Display help for command\n</code></pre>\n<p>一般情况下该指令可以进行有效的简化，例如：<code>s exec fc -- deploy</code>可以简化为<code>s fc deploy</code>，但是当存在Serverless Devs开发者工具和组件某些参数冲突时则不能简化，例如<code>s exec fun -t test.yaml -- -t template.yaml</code></p>\n<h2 id=\"set%E6%8C%87%E4%BB%A4\">set指令 <a class=\"header-anchor\" href=\"#set%E6%8C%87%E4%BB%A4\">#</a></h2>\n<p><code>set</code>指令是对工具进行相关配置的指令。</p>\n<p>当我们执行<code>s set -h</code>之后，可以进行相关帮助信息的查看：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s <span class=\"hljs-built_in\">set</span> -h</span>\nUsage: s set [commands] [options]\n\nYou can make some default settings for the tool here.\n\nOptions:\n  -h, --help  Display help for command\n\nCommands:\n  registry    👀 Set up a custom registry\n</code></pre>\n<h3 id=\"set-registry-%E5%91%BD%E4%BB%A4\">set registry 命令 <a class=\"header-anchor\" href=\"#set-registry-%E5%91%BD%E4%BB%A4\">#</a></h3>\n<p>配置源，通过<code>-h/--help</code>可以看到效果：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s <span class=\"hljs-built_in\">set</span> registry -h</span>\n\nUsage: s set registry [options]\n\nUpload your usage habits to help us improve our products\n\n    Example:\n        $ s set registry default\n        $ s set registry https://registry.serverlessfans.cn/\n\nOptions:\n  -h, --help  Display help for command\n</code></pre>\n",
  "link": "/zh-cn/docs/command.html",
  "meta": {
    "sidebar_position": "3"
  }
}