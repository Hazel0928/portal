{
  "filename": "dev.md",
  "__html": "<h1 id=\"%E5%BC%80%E5%8F%91%E8%80%85%E6%96%87%E6%A1%A3\">开发者文档 <a class=\"header-anchor\" href=\"#%E5%BC%80%E5%8F%91%E8%80%85%E6%96%87%E6%A1%A3\">#</a></h1>\n<p>Serverless Devs是组件化开发者工具，是一个通过社区共同建设的Serverless开发者生态，通过Serverless Devs，开发者可以通过自定义组件来完成不同的Serverless应用开发。</p>\n<p>开发一个Package的基本流程是：</p>\n<ul>\n<li><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96Package\">初始化Package</a></li>\n<li><a href=\"#%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91\">项目开发</a></li>\n<li><a href=\"#%E5%8F%91%E5%B8%83Package\">发布Package</a></li>\n</ul>\n<h2 id=\"%E5%88%9D%E5%A7%8B%E5%8C%96package\">初始化Package <a class=\"header-anchor\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96package\">#</a></h2>\n<p>您可以通过<code>s init</code>指令，选择对应的<code>application</code>，<code>component</code>，<code>plugin</code>内容，关于这三者的区别：</p>\n<hr>\n<p>首先可以肯定的是，Serverless Devs Tool是一个组件+插件共存的项目，所以这里的组件和插件的区别是：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>组件</th>\n<th>插件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>可以独立使用</td>\n<td>是</td>\n<td>否</td>\n</tr>\n<tr>\n<td>是否有依赖</td>\n<td>依赖项目</td>\n<td>依赖组件</td>\n</tr>\n</tbody>\n</table>\n<p>好了，这样一个简单的表格，可能很难描述清楚，那么我们就用一个实际的例子来表示：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># 完整的是一个应用</span>\n<span class=\"hljs-attr\">edition:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span> \n<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">FullStack</span> \n<span class=\"hljs-attr\">access:</span> <span class=\"hljs-string\">xxx-account1</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">nextjs-portal:</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">fc</span> <span class=\"hljs-comment\"># 这个fc是一个组件</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">src:</span> <span class=\"hljs-string\">./frontend_src</span>\n      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">${backend.output.url}</span>\n    <span class=\"hljs-attr\">actions:</span>\n      <span class=\"hljs-attr\">pre-deploy:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">plugin:</span> <span class=\"hljs-string\">plugin-name</span> <span class=\"hljs-comment\"># 这是一个插件，这执行deploy之前会执行</span>\n</code></pre>\n<p>在这个Yaml中，我们可以看到，这里有一个项目是<code>Projectname</code>，这个项目依赖了组件<code>stest</code>，在项目执行<code>deploy</code>方法（这个方法是<code>stest</code>组件自己定义的）之前，要执行一个叫做<code>stest_plugin</code>的组件。其组件和插件以及Yaml等关系如下：</p>\n<p><img src=\"https://images.devsapp.cn/s-tool/zh/component-application-plugin-2.jpg\" alt=\"\"></p>\n<p>换一种说法就是，一个Yaml，可以部署多个项目，每个项目对应了一个组件，这个组件来完成每个项目的部署。但是有一些组件在某些情况下没办法更好地完成一个任务，所以这个时候就需要插件/Hook了。例如，当我们部署一个静态网站项目，我们可以把这个静态网站项目通过<code>Website</code>组件部署到线上，但是如果这个项目是一个Vue的项目，我们在部署之前可能要<code>npm build</code>一下，这个时候我们就可以在<code>Website</code>组件之上，增加一个插件，在部署执行，先执行这个部分。这种做法实际上在我们工程化一个项目或者CICD流程中，将会有比较有趣的作用。</p>\n<p>那么，什么是应用呢？其实一个应用的定义就比较广泛了，你可以认为所谓的一个应用是一个Yaml，这个应用中包括Yaml所附带的代码，包括资源描述文件(Yaml文件)等。一般情况下是这样的：</p>\n<p><img src=\"https://images.devsapp.cn/s-tool/zh/component-application-plugin-3.jpg\" alt=\"\"></p>\n<p>我们可以认为一个应用可以是一个<code>hello_world</code>的案例，一个音视频处理的案例，部署一个在线转码的能力，部署一个......</p>\n<p>组件、应用和插件的概念，其实并不复杂，如果据一个身边常见的例子为例就是：</p>\n<p>一个应用就是一个拍照的手机APP，这个APP里面会有很多组件，例如打开摄像头组件、拍照组建、以及存储照片组件，当我们在存储照片的时候需要默认将用户拍的照片进行一些特征提取，例如提取出来拍摄时间、拍摄地点，但是这些能力又不是存储照片组件所提供的，所以这个时候，我们就可以在存储照片之前，放一个提取出来拍摄时间和拍摄地点的插件。</p>\n<p>其实组件、插件和应用之间，是有一定的区别，但是在某些极端情况下，也没有非常非常明确的区别，所以大家也不用过分纠结这些内容具体的细致的区别：好用，就可以了，能用的起来，用的方便，简单，快速，就可以了。</p>\n<hr>\n<h2 id=\"%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91\">项目开发 <a class=\"header-anchor\" href=\"#%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91\">#</a></h2>\n<p>项目开发过程中，您需要严格遵守项目开发文档</p>\n<h3 id=\"application%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">Application开发规范 <a class=\"header-anchor\" href=\"#application%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">#</a></h3>\n<h4 id=\"%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">开发规范 <a class=\"header-anchor\" href=\"#%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">#</a></h4>\n<p>以下开发规范仅是测试版的规范（但是之后的规范会兼容这套规范），规范会在后期不断完善，也期待您可以给我们更多的意见、建议。</p>\n<p>项目目录必须遵守以下格式：</p>\n<pre><code>|- src # 目录名字不可变更\n|   └── 应用目录  \n|- publish.yaml: 项目的资源描述   \n|- readme.md: 项目简介  \n|- version.md: 版本更新内容\n</code></pre>\n<h4 id=\"publish.yaml\">publish.yaml <a class=\"header-anchor\" href=\"#publish.yaml\">#</a></h4>\n<p>这个文件时项目的描述文档。系统将会在您发布资源的时候，读取该文档并且进行相关信息的录入，请您务必认真填写。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">Type:</span> <span class=\"hljs-string\">Application</span>\n<span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">名称</span>\n<span class=\"hljs-attr\">Provider:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">云厂商名称</span> <span class=\"hljs-comment\"># Alibaba/Baidu/Huawei/AWS/Google Cloud/Azure/Vercel/Tencent</span>\n<span class=\"hljs-attr\">Version:</span> <span class=\"hljs-string\">版本，例如0.0.1</span>\n<span class=\"hljs-attr\">Description:</span> \n  <span class=\"hljs-attr\">zh:</span> <span class=\"hljs-string\">简短的描述/介绍</span>\n  <span class=\"hljs-attr\">en:</span> <span class=\"hljs-string\">English</span>\n<span class=\"hljs-attr\">HomePage:</span> <span class=\"hljs-string\">项目首页地址</span>\n<span class=\"hljs-attr\">Tags:</span> <span class=\"hljs-comment\">#标签详情</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">zh:</span> <span class=\"hljs-string\">部署函数</span>\n    <span class=\"hljs-attr\">en:</span> <span class=\"hljs-string\">English</span>\n<span class=\"hljs-attr\">Category:</span> <span class=\"hljs-string\">分类</span> <span class=\"hljs-comment\"># 基础云服务/Web框架/Web应用/人工智能/音视频处理/图文处理/监控告警/大数据/IoT/新手入门/其他</span>\n<span class=\"hljs-attr\">Service:</span> <span class=\"hljs-comment\"># 使用的服务</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">服务名</span> <span class=\"hljs-comment\"># 函数计算/容器服务/镜像服务/消息队列/工作流/CDN/对象存储/表格存储/MNS/日志服务/API网关/数据库/解析服务/云应用/其他</span>\n    <span class=\"hljs-comment\"># Runtime: Python 3.6 如果服务是函数，还需要增加Runtime</span>\n    <span class=\"hljs-attr\">Authorities:</span> <span class=\"hljs-comment\">#权限权限</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">zh:</span> <span class=\"hljs-string\">创建函数</span> <span class=\"hljs-comment\"># 所需要的权限</span>\n        <span class=\"hljs-attr\">en:</span> <span class=\"hljs-string\">English</span>\n</code></pre>\n<p>部分参数取值范围：</p>\n<ul>\n<li>\n<p>云厂商：\n<code>阿里云, 百度智能云, 华为云, 腾讯云, AWS, Azure, Google Cloud, /其它</code></p>\n</li>\n<li>\n<p>分类：\n<code>基础云服务, Web框架, 全栈应用, 人工智能, 音视频处理, 图文处理, 监控告警, 大数据, IoT, 新手入门, 其他</code></p>\n</li>\n<li>\n<p>云厂商：\n<code>函数计算, 容器服务, 镜像服务, 消息队列, 工作流, CDN, 对象存储, 表格存储, MNS, 日志服务, API网关, 数据库, 解析服务, 云应用, 其他</code></p>\n</li>\n<li>\n<p>运行时：\n<code>Node.JS, Python, PHP, Java, Go, 其它</code></p>\n</li>\n</ul>\n<h5 id=\"readme.md\"><a href=\"http://readme.md\">readme.md</a> <a class=\"header-anchor\" href=\"#readme.md\">#</a></h5>\n<p>这个文件是项目的简介，您可以通过这部分，为您的项目写一份完整的描述文档，这样大家在使用您的项目的时候，才可以更加简单，轻松快速的用的起来。</p>\n<h5 id=\"version.md\"><a href=\"http://version.md\">version.md</a> <a class=\"header-anchor\" href=\"#version.md\">#</a></h5>\n<p>这个版本升级的描述文档，可以在这个文档介绍版本升级的内容</p>\n<h4 id=\"%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B\">项目流程 <a class=\"header-anchor\" href=\"#%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B\">#</a></h4>\n<p>本例子仅是一个开发样例，尽可能的为您描述清楚每个开发细节。如果有任何问题可以随时和我取得联系（Wechat：anycodes_02）</p>\n<p>在命令行执行：<code>s init</code>，选择<code>Application</code>选项即可创建初始化项目。</p>\n<h3 id=\"component%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">Component开发规范 <a class=\"header-anchor\" href=\"#component%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">#</a></h3>\n<h4 id=\"%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-1\">开发规范 <a class=\"header-anchor\" href=\"#%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-1\">#</a></h4>\n<p>以下开发规范仅是测试版的规范（但是之后的规范会兼容这套规范），规范会在后期不断完善，也期待您可以给我们更多的意见、建议。</p>\n<p>项目目录必须遵守以下格式：</p>\n<pre><code>|- src # 目录名字可以变更\n|   └── 代码目录  \n|- package.json: 需要定义好main   \n|- publish.yaml: 项目的资源描述   \n|- readme.md: 项目简介  \n|- version.md: 版本更新内容\n</code></pre>\n<h4 id=\"publish.yaml-1\">publish.yaml <a class=\"header-anchor\" href=\"#publish.yaml-1\">#</a></h4>\n<p>这个文件时项目的描述文档。系统将会在您发布资源的时候，读取该文档并且进行相关信息的录入，请您务必认真填写。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">Type:</span> <span class=\"hljs-string\">Component</span>\n<span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">名称</span>\n<span class=\"hljs-attr\">Provider:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">云厂商名称</span> \n<span class=\"hljs-attr\">Version:</span> <span class=\"hljs-string\">版本，例如0.0.1</span>\n<span class=\"hljs-attr\">Description:</span> <span class=\"hljs-string\">简短的描述/介绍</span>\n<span class=\"hljs-attr\">HomePage:</span> <span class=\"hljs-string\">项目首页地址</span>\n<span class=\"hljs-attr\">Tags:</span> <span class=\"hljs-comment\">#标签详情</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">部署函数</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">部署组件</span>\n<span class=\"hljs-attr\">Category:</span> <span class=\"hljs-string\">分类</span> <span class=\"hljs-comment\"># 基础云服务/Web框架/Web应用/人工智能/音视频处理/图文处理/监控告警/大数据/IoT/新手入门/其他</span>\n<span class=\"hljs-attr\">Service:</span> <span class=\"hljs-comment\"># 使用的服务</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">服务名</span> <span class=\"hljs-comment\"># 函数计算/容器服务/镜像服务/消息队列/工作流/CDN/对象存储/表格存储/MNS/日志服务/API网关/数据库/解析服务/云应用/其他</span>\n    <span class=\"hljs-comment\"># Runtime: Python 3.6 如果服务是函数，还需要增加Runtime</span>\n    <span class=\"hljs-attr\">Authorities:</span> <span class=\"hljs-comment\">#权限描述</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">创建函数</span> <span class=\"hljs-comment\"># 所需要的权限</span>\n<span class=\"hljs-attr\">Commands:</span> <span class=\"hljs-comment\"># 指令，格式为指令：指令描述，例如：</span>\n  <span class=\"hljs-attr\">deploy:</span> <span class=\"hljs-string\">部署函数</span>\n  <span class=\"hljs-attr\">invoke:</span> <span class=\"hljs-string\">调用函数</span>\n<span class=\"hljs-attr\">Properties:</span>\n  <span class=\"hljs-attr\">Region:</span> <span class=\"hljs-comment\"># 参数</span>\n    <span class=\"hljs-attr\">Description:</span> <span class=\"hljs-string\">参数描述</span>\n    <span class=\"hljs-attr\">Required:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># 参数必选，true/false</span>\n    <span class=\"hljs-attr\">Type:</span> <span class=\"hljs-comment\"># 参数类型</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">String</span>\n</code></pre>\n<p>部分参数取值范围：</p>\n<ul>\n<li>\n<p>云厂商：\n<code>阿里云, 百度智能云, 华为云, 腾讯云, AWS, Azure, Google Cloud, 其它</code></p>\n</li>\n<li>\n<p>分类：\n<code>基础云服务, Web框架, 全栈应用, 人工智能, 音视频处理, 图文处理, 监控告警, 大数据, IoT, 新手入门, 其他</code></p>\n</li>\n<li>\n<p>云厂商：\n<code>函数计算, 容器服务, 镜像服务, 消息队列, 工作流, CDN, 对象存储, 表格存储, MNS, 日志服务, API网关, 数据库, 解析服务, 云应用, 其他</code></p>\n</li>\n<li>\n<p>运行时：\n<code>Node.JS, Python, PHP, Java, Go, 其它</code></p>\n</li>\n<li>\n<p>Properties相关：<br>\n必须参数：<br>\n<code>Description, Required, Type</code><br>\n可选参数：<br>\n<code>Example, Default</code><br>\nType可以是String类型，也可以是List类型，取值：<br>\n<code>String, Number, List, Enum, Struct, Boolean, Null, Any</code><br>\n负责类型可以是：<code>List&lt;数据类型&gt;</code><br>\n当Type是List类型时，可以针对不同的元素做别名：<code>数据类型[别名]</code></p>\n</li>\n</ul>\n<h5 id=\"readme.md-1\"><a href=\"http://readme.md\">readme.md</a> <a class=\"header-anchor\" href=\"#readme.md-1\">#</a></h5>\n<p>这个文件是项目的简介，您可以通过这部分，为您的项目写一份完整的描述文档，这样大家在使用您的项目的时候，才可以更加简单，轻松快速的用的起来。</p>\n<h5 id=\"version.md-1\"><a href=\"http://version.md\">version.md</a> <a class=\"header-anchor\" href=\"#version.md-1\">#</a></h5>\n<p>这个版本升级的描述文档，可以在这个文档介绍版本升级的内容</p>\n<h4 id=\"%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B-1\">项目流程 <a class=\"header-anchor\" href=\"#%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B-1\">#</a></h4>\n<p>本例子仅是一个开发样例，尽可能的为您描述清楚每个开发细节。如果有任何问题可以随时和我取得联系（Wechat：anycodes_02）</p>\n<p>在命令行执行：<code>s init</code>，选择<code>Application</code>选项即可创建初始化项目。</p>\n<p>例如，用户的Yaml格式为：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">edition:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span>        <span class=\"hljs-comment\">#  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范</span>\n<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">FullStack</span>       <span class=\"hljs-comment\">#  项目名称</span>\n<span class=\"hljs-attr\">access:</span> <span class=\"hljs-string\">xxx-account1</span>  <span class=\"hljs-comment\">#  秘钥别名</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">HexoComponent:</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">hexo</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">'cn-hangzhou'</span>\n      <span class=\"hljs-attr\">codeUri:</span> <span class=\"hljs-string\">'./src'</span>\n</code></pre>\n<p>当用户执行<code>s deploy mytest -a -b abc</code>，此时，您的<code>deploy</code>方法，收到的<code>inputs</code>参数实际上是：</p>\n<pre><code>{\n    &quot;Command&quot;: 'deploy', \n    &quot;Project&quot;: {\n        ProjectName: 'HexoComponent', \n        Component: 'hexo',\n        Provider: 'alibaba',\n        AccessAlias：'release'\n    },\n    &quot;Credentials&quot;: {\n        &quot;AccountID&quot;: &quot;********&quot;,\n        &quot;AccessKeyID&quot;: &quot;********&quot;,\n        &quot;AccessKeySecret&quot;: &quot;********&quot;,\n    },\n    &quot;Properties&quot;: {\n        &quot;Region&quot;: &quot;cn-hangzhou&quot;,\n        &quot;CodeUri&quot;: &quot;./src&quot;\n    },\n    &quot;Args&quot;: &quot;mytest -a -b abc&quot;\n}\n</code></pre>\n<p>开发组件所需要的核心能力，可以参考：<a href=\"https://github.com/Serverless-Devs/s-core\">https://github.com/Serverless-Devs/s-core</a></p>\n<h3 id=\"plugin%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">Plugin开发规范 <a class=\"header-anchor\" href=\"#plugin%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\">#</a></h3>\n<h4 id=\"%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-2\">开发规范 <a class=\"header-anchor\" href=\"#%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83-2\">#</a></h4>\n<p>以下开发规范仅是测试版的规范（但是之后的规范会兼容这套规范），规范会在后期不断完善，也期待您可以给我们更多的意见、建议。</p>\n<p>项目目录必须遵守以下格式：</p>\n<pre><code>|- src # 目录名字可以变更\n|   └── 插件目录  \n|- package.json: 指定main\n|- publish.yaml: 项目的资源描述   \n|- readme.md: 项目简介  \n|- version.md: 版本更新内容\n</code></pre>\n<h4 id=\"publish.yaml-2\">publish.yaml <a class=\"header-anchor\" href=\"#publish.yaml-2\">#</a></h4>\n<p>这个文件时项目的描述文档。系统将会在您发布资源的时候，读取该文档并且进行相关信息的录入，请您务必认真填写。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">Type:</span> <span class=\"hljs-string\">Plugin</span>\n<span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">名称</span>\n<span class=\"hljs-attr\">Version:</span> <span class=\"hljs-string\">版本，例如0.0.1</span>\n<span class=\"hljs-attr\">Description:</span> <span class=\"hljs-string\">简短的描述/介绍</span>\n<span class=\"hljs-attr\">HomePage:</span> <span class=\"hljs-string\">项目首页地址</span>\n<span class=\"hljs-attr\">Tags:</span> <span class=\"hljs-comment\">#标签详情</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">部署函数</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">部署组件</span>\n<span class=\"hljs-attr\">Category:</span> <span class=\"hljs-string\">分类</span> <span class=\"hljs-comment\"># 基础云服务/Web框架/Web应用/人工智能/音视频处理/图文处理/监控告警/大数据/IoT/新手入门/其他</span>\n</code></pre>\n<p>部分参数取值范围：</p>\n<ul>\n<li>分类：\n<code>基础云服务, Web框架, 全栈应用, 人工智能, 音视频处理, 图文处理, 监控告警, 大数据, IoT, 新手入门, 其他</code></li>\n</ul>\n<h5 id=\"readme.md-2\"><a href=\"http://readme.md\">readme.md</a> <a class=\"header-anchor\" href=\"#readme.md-2\">#</a></h5>\n<p>这个文件是项目的简介，您可以通过这部分，为您的项目写一份完整的描述文档，这样大家在使用您的项目的时候，才可以更加简单，轻松快速的用的起来。</p>\n<h5 id=\"version.md-2\"><a href=\"http://version.md\">version.md</a> <a class=\"header-anchor\" href=\"#version.md-2\">#</a></h5>\n<p>这个版本升级的描述文档，可以在这个文档介绍版本升级的内容</p>\n<h4 id=\"%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B-2\">项目流程 <a class=\"header-anchor\" href=\"#%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B-2\">#</a></h4>\n<p>本例子仅是一个开发样例，尽可能的为您描述清楚每个开发细节。如果有任何问题可以随时和我取得联系（Wechat：anycodes_02）</p>\n<p>在命令行执行：<code>s init</code>，选择<code>Plugin</code>选项即可创建初始化项目。</p>\n<h2 id=\"%E5%8F%91%E5%B8%83package\">发布Package <a class=\"header-anchor\" href=\"#%E5%8F%91%E5%B8%83package\">#</a></h2>\n<p>发布Package的方法是非常简单的，当您完成了项目开发，您可以将代码推动到Github，或者放入所配置的私有源即可</p>\n<p>不发布package情况下组件的使用方法：<br>\n您如果开发完成项目，不想直接对外开放，仅是想自己使用，您可以通过直接引入项目绝对路径的方法使用。例如：</p>\n<pre><code class=\"language-shell\">edition: 1.0.0        #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范\nname: FullStack       #  项目名称\naccess: xxx-account1  #  秘钥别名\n\nservices:\n  nextjs-portal: #  服务名称\n    component: ./my-full-stack-component-path\n    props: #  组件的属性值\n      src: ./frontend_src\n      url: ${backend.output.url}\n</code></pre>\n",
  "link": "/zh-cn/docs/dev.html",
  "meta": {
    "sidebar_position": "5"
  }
}