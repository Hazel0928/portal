{
  "filename": "yaml.md",
  "__html": "<h1 id=\"yaml%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3\">Yaml规范文档 <a class=\"header-anchor\" href=\"#yaml%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3\">#</a></h1>\n<p>Serverless Devs是可以通过Yaml进行资源描述的，我们也是推荐使用者通过Yaml进行资源和行为的管理。</p>\n<p>Serverless Devs Cli可以识别的Yaml默认文件为<code>s.yaml</code>/<code>s.yml</code>，使用者也可以通过<code>-t/--template</code>来进行其他名称的Yaml文件的指定，Serverless Devs Cli可识别的Yaml规范格式整体为：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">edition:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span>        <span class=\"hljs-comment\">#  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范</span>\n<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">FullStack</span>       <span class=\"hljs-comment\">#  项目名称</span>\n<span class=\"hljs-attr\">access:</span> <span class=\"hljs-string\">xxx-account1</span>  <span class=\"hljs-comment\">#  秘钥别名</span>\n\n<span class=\"hljs-attr\">vars:</span> <span class=\"hljs-comment\"># [全局变量，提供给各个服务使用]</span>\n  <span class=\"hljs-attr\">logo:</span> <span class=\"hljs-string\">https://image.aliyun.com/xxxx.png</span>\n  <span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">xxxx.yyy.com</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">nextjs-portal:</span> <span class=\"hljs-comment\">#  服务名称</span>\n    <span class=\"hljs-attr\">access:</span> <span class=\"hljs-string\">xxx-account1</span>  <span class=\"hljs-comment\">#  秘钥别名，如果和项目的access相同，可省略</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">vue-component</span>  <span class=\"hljs-comment\"># 组件名称</span>\n    <span class=\"hljs-attr\">props:</span> <span class=\"hljs-comment\">#  组件的属性值</span>\n      <span class=\"hljs-attr\">src:</span> <span class=\"hljs-string\">./frontend_src</span>\n      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">url</span>\n    <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-comment\"># 自定义执行逻辑</span>\n      <span class=\"hljs-attr\">pre-deploy:</span> <span class=\"hljs-comment\"># 在deploy之前运行</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">s</span> <span class=\"hljs-string\">exec</span> <span class=\"hljs-string\">--</span> <span class=\"hljs-string\">publish</span>  <span class=\"hljs-comment\"># 要运行的命令行</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./backend_src</span> <span class=\"hljs-comment\"># 命令行运行的路径</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">plugin:</span> <span class=\"hljs-string\">plugin-name</span> <span class=\"hljs-comment\"># 要运行的plugin名称</span>\n      <span class=\"hljs-attr\">post-deploy:</span> <span class=\"hljs-comment\"># 在deploy之后运行</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">s</span> <span class=\"hljs-string\">clean</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./frontend_src</span>\n\n  <span class=\"hljs-attr\">assets:</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">static</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">cache-control:</span> <span class=\"hljs-string\">\"public, max-age=604800, immutable\"</span>\n      <span class=\"hljs-attr\">www:</span> <span class=\"hljs-string\">\"./public\"</span>\n\n  <span class=\"hljs-attr\">express-blog:</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">express</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">./express-blog</span>\n      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">${vars.domain}</span>\n    <span class=\"hljs-attr\">actions:</span>\n      <span class=\"hljs-attr\">pre-deploy:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./express-blog</span>\n\n  <span class=\"hljs-attr\">gateway:</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">serverless-gateway</span> <span class=\"hljs-comment\"># 路由组件：HTTP URL和服务之间的映射规则</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">routes:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">route:</span> <span class=\"hljs-string\">/~assets</span>\n          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">${assets.output.url}</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">route:</span> <span class=\"hljs-string\">/</span>\n          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">${nextjs-portal.output.url}</span>\n          <span class=\"hljs-attr\">index:</span> <span class=\"hljs-string\">index.html</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">route:</span> <span class=\"hljs-string\">/~portal</span>\n          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">${nextjs-portal.output.url}</span>\n          <span class=\"hljs-attr\">inex:</span> <span class=\"hljs-string\">index.html</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">route:</span> <span class=\"hljs-string\">/~blog</span>\n          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">${express-blog.output.url}</span>\n</code></pre>\n<p>Yaml支持的多种变量格式如下：</p>\n<ul>\n<li>获取当前机器中的环境变量：{env(环境变量)}，例如{env(secretId)}</li>\n<li>获取外部文档的变量：{file(路径)}，例如{file(./path)}</li>\n<li>获取全局变量：${vars.*}</li>\n<li>获取其他项目的变量：${projectName.props.*}</li>\n<li>获取Yaml中其他项目的结果变量：${projectName.output.*}</li>\n</ul>\n<p>当然，如果一个Yaml中有过多的项目，系统也会默认分析部署顺序：</p>\n<ol>\n<li>分析项目中的依赖关系</li>\n<li>有依赖关系的按照依赖关系从前到后部署，无依赖关系的按Yaml配置的从上到下部署</li>\n</ol>\n",
  "link": "/zh-cn/docs/yaml.html",
  "meta": {
    "sidebar_position": "3"
  }
}